buildscript {
  repositories {
    maven { url = 'https://files.minecraftforge.net/maven' }
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: '1.3.41'
    classpath group: 'com.jfrog.bintray.gradle', name: 'gradle-bintray-plugin', version: '1.+'
  }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.jfrog.bintray'

version = '3.0.1'
group = 'io.opencubes'
archivesBaseName = 'boxlin'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
  mappings channel: 'snapshot', version: '20190719-1.14.3'
  runs {
    client {
      workingDirectory project.file('run')

      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'

      mods {
        boxlin {
          source sourceSets.main
        }
      }
    }

    server {
      workingDirectory project.file('run')

      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'

      mods {
        boxlin {
          source sourceSets.main
        }
      }
    }

    data {
      workingDirectory project.file('run')

      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'

      args '--mod', 'boxlin', '--all', '--output', file('src/generated/resources/')

      mods {
        boxlin {
          source sourceSets.main
        }
      }
    }
  }
}

repositories {
  jcenter()
}

dependencies {
  minecraft 'net.minecraftforge:forge:1.14.4-28.0.49'
  compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.41'
  compile 'org.jetbrains.kotlin:kotlin-reflect:1.3.41'
  compile "org.jetbrains.kotlin:kotlin-script-runtime:1.3.41"
}

jar {
  manifest {
    attributes([
      "FMLModType"              : "LANGPROVIDER",
      "Specification-Title"     : "boxlin",
      "Specification-Vendor"    : "ocpu",
      "Specification-Version"   : "3",
      "Implementation-Title"    : project.name,
      "Implementation-Version"  : "${version}",
      "Implementation-Vendor"   : "ocpu",
      "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}
task generateFatJar(type: Jar) {
  classifier = 'fat'
  from {
    configurations.compile
      .filter { it.path.contains('org.jetbrains.kotlin') }
      .collect { it.isDirectory() ? it : zipTree(it) }
  }

  manifest {
    attributes([
      "FMLModType"              : "LANGPROVIDER",
      "Specification-Title"     : "boxlin",
      "Specification-Vendor"    : "ocpu",
      "Specification-Version"   : "3",
      "Implementation-Title"    : project.name,
      "Implementation-Version"  : "${version}",
      "Implementation-Vendor"   : "ocpu",
      "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }

  with jar
}
configure(generateFatJar) {
  group = 'Build'
  description = 'Generate a jar file with dependencies and code'
}
task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}
task javadocJar(type: Jar) {
  from javadoc
  classifier = 'javadoc'
}
publishing {
  publications {
    boxlin(MavenPublication) {
      from components.java

      artifact sourcesJar
      artifact javadocJar

      pom {
        name = 'Boxlin'
        description = 'A language provider for Minecraft Forge. This provider will load Kotlin based mods.'
        url = 'https://github.com/ocpu/Boxlin'
        licenses {
          license {
            name = 'MIT License'
            url = 'http://www.opensource.org/licenses/mit-license.php'
            distribution = 'repo'
          }
        }
        developers {
          developer {
            id = 'ocpu'
            name = 'Martin HÃ¶vre'
            email = 'martin.hovre@opencubes.io'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/ocpu/Boxlin.git'
          developerConnection = 'scm:git:ssh://github.com/ocpu/Boxlin.git'
          url = 'https://github.com/ocpu/Boxlin'
        }
      }
      pom.withXml {
        Node pomNode = asNode()
        pomNode.dependencies.'*'.findAll() {
          it.artifactId.text() == 'forge'
        }.each() {
          it.parent().remove(it)
        }
      }
    }
  }
  repositories {
    maven {
      name "GitHub"
      url "https://maven.pkg.github.com/${githubUser}/${project.name}"
      credentials {
        username githubUser
        password githubToken
      }
    }
  }
}

signing {
  useGpgCmd()
  sign publishing.publications.boxlin
}

bintray {
  user = bintrayUser
  key = bintrayKey
  publications = ['boxlin']
  pkg {
    repo = 'minecraft'
    name = 'Boxlin'
    websiteUrl = 'https://github.com/ocpu/Boxlin'
    vcsUrl = "https://github.com/ocpu/Boxlin.git"
    licenses = ['MIT']
//        publish = true
    version {
      name = project.version
      vcsTag = project.version
    }
  }
}
